class Solution {
    public boolean search(int[] nums, int target) {
        int p = pivot(nums, target);
        System.out.println(p);
        if(target==nums[p]){
            return true;
        }
        if(bin(nums, target, 0, p-1) || bin(nums, target, p, nums.length-1)){
            return true;
        }
        return false;
    }
    
    static int pivot(int[] arr, int t){
        int s = 0;
        int e = arr.length-1;
        while(s<e){
            int m = s+ (e-s)/2;
            if(arr[s]>arr[m]){
                e = m;
            }
            else if(arr[s]==arr[e]){
                s++;
                e--;
            }
            else{
                s++;
            }
        }
        return s;
    }

    static boolean bin(int[] arr,int t,int s,int e){
        while(s<=e){
            int m = s+ (e-s)/2;
            if(arr[m]==t){
                return true;
            }
            else if(arr[m]<t){
                s = m+1;
            }
            else{
                e = m-1;
            }
        }
        return false;
    }
}
